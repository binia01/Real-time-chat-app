// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  username  String    @unique
  email     String    @unique
  password  String
  createdAt DateTime  @default(now())
  privateMessages Message[] @relation("PrivateMessages")
  groupMemberships GroupMember[]
  conversations Conversation[] @relation("Participants")
  sentMessages Message[] @relation("sender")
}

model Conversation {
  id          Int       @id @default(autoincrement())
  participants User[]   @relation("Participants")
  messages    Message[]
  createdAt   DateTime  @default(now())
}

model Group {
  id        Int       @id @default(autoincrement())
  name      String
  members   GroupMember[]
  messages  Message[]
  createdAt DateTime  @default(now())
}

model GroupMember {
  id       Int   @id @default(autoincrement())
  user     User  @relation(fields: [userId], references: [id])
  userId   Int
  group    Group @relation(fields: [groupId], references: [id])
  groupId  Int
}

model Message {
  id             Int        @id @default(autoincrement())
  text           String
  sender         User       @relation("sender", fields: [senderId], references: [id])
  senderId       Int
  conversation   Conversation? @relation(fields: [conversationId], references: [id])
  conversationId Int?
  group          Group?       @relation(fields: [groupId], references: [id])
  groupId        Int?
  privateMessages User?       @relation("PrivateMessages", fields: [privateMessagesId], references: [id])
  privateMessagesId Int?
  createdAt      DateTime     @default(now())
}
